{"version":3,"sources":["components/Home.jsx","services/beers.jsx","components/BeerCard.jsx","components/AllBeers.jsx","components/NewBeer.jsx","components/BeerInfo.jsx","components/RandomBeer.jsx","components/id.jsx","components/navBar.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","useState","index","setIndex","Carousel","activeIndex","onSelect","selectedIndex","e","s","Item","style","height","className","src","alt","Caption","bottom","to","services","GetAllBeers","get","then","response","data","catch","error","AddBeer","beer","post","RandomBeer","SelectedBeer","id","this","axios","create","baseURL","BeerCard","props","Card","width","margin","Img","variant","image_url","name","Body","Title","Text","description","food_pairing","ListGroup","ListGroupItem","map","x","idx","key","ibu","attenuation_level","contributed_by","alignSelf","border","borderColor","borderRadius","padding","marginBottom","textDecoration","color","_id","size","block","AllBeers","state","BeerService","service","setState","length","Component","change","target","value","handleSubmit","preventDefault","redirect","tagline","first_brewed","brewers_tips","Form","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","as","Button","BeerInfo","Image","fluid","Tabs","defaultActiveKey","Tab","eventKey","title","Beer","getBeerId","beerId","match","params","NavBar","Navbar","bg","Brand","Nav","marginRight","App","path","exact","component","NewBeer","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.3e167b04.chunk.js","sourcesContent":["import React, { useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { Carousel,} from \"react-bootstrap\"\n\nconst Home = () => {\n    const [index, setIndex] = useState(0);\n    const handleSelect = (selectedIndex, e) => {\n        setIndex(selectedIndex);\n    };\n\n    return (\n        <div>\n            <Carousel activeIndex={index} onSelect={handleSelect} s>\n                <Carousel.Item>\n                    <img style={{ height: '95vh' }}\n                        className=\"d-block w-100\"\n                        src=\"/beers.jpeg\"\n                        alt=\"First slide\"\n                    />\n                    <Carousel.Caption style={{bottom:'50vh'}}>\n                        <h3 className=\"homeTitle\">🍻All Beers!🍻</h3>\n                        <p className=\"homeText\">En esta seccion podras encontrar la informacion de todas las cerveza disponobles!</p>\n                        <Link className=\"AllBeersButton\" to=\"/all-beers\">All Beers</Link>\n                    </Carousel.Caption>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <img style={{ height: '95vh' }}\n                        className=\"d-block w-100\"\n                        src=\"/new_beer.jpeg\"\n                        alt=\"Second slide\"\n                    />\n\n                    <Carousel.Caption style={{bottom:'50vh'}}>\n                        <h3 className=\"homeTitle\">New beer!</h3>\n                        <p className=\"homeText\">En esta seccion podras añadir nuevas cervezas!</p>\n                        <Link className=\"AllBeersButton\" to=\"/new-beer\">New Beers</Link>\n\n                    </Carousel.Caption>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <img style={{ height: '95vh' }}\n                        className=\"d-block w-100\"\n                        src=\"/random_beer.jpeg\"\n                        alt=\"Third slide\"\n                    />\n                    <Carousel.Caption style={{bottom:'50vh'}}>\n                        <h3 className=\"homeTitle\">Random beer!</h3>\n                        <p className=\"homeText\">Dejate sorprender por una cerveza aleatoria!</p>\n                        <Link className=\"AllBeersButton\" to=\"/random-beer\">Random Beer</Link>\n                    </Carousel.Caption>\n                </Carousel.Item>\n            </Carousel>\n        </div>\n    );\n}\nexport default Home","import axios from \"axios\"\n\nexport default class services {\n    constructor() {\n        this.services = axios.create({\n            baseURL: 'https://ih-beer-api.herokuapp.com/beers'\n        })\n    }\n    GetAllBeers = () => {\n        return this.services.get(\"/\")\n            .then(response => response.data)\n            .catch(error => error.data)\n    }\n    AddBeer = (beer) => {\n        return this.services.post(\"/new\", beer)\n            .then(response => response.data)\n            .catch(error => error.data)\n    }\n    RandomBeer = () => {\n        return this.services.get(\"/random\")\n            .then(response=>response.data)\n            .catch(error=>error.data)\n    }\n    SelectedBeer = (id) =>{\n        return this.services.get(`/${id}`)\n            .then(response=>response.data)\n            .catch(error=>error.data)\n    }\n}","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { Card, ListGroup, ListGroupItem } from \"react-bootstrap\"\nconst BeerCard = (props) => {\n    return (\n        <Card style={{ width: '18rem',margin:'15px'}}>\n            <Card.Img  variant=\"top\" src={props.image_url} alt={props.name} className='beer cardImage' />\n            <Card.Body style={{ height: '400px' }}>\n                <Card.Title>{props.name}</Card.Title>\n                <Card.Text>\n                    {props.description}\n                </Card.Text>\n            </Card.Body>\n            <div style={{ height: '365px' }}>\n                {props.food_pairing ?\n                    <ListGroup className=\"list-group-flush\">\n                        <ListGroupItem>Maridaje:</ListGroupItem>\n                        {props.food_pairing.map((x, idx) => {\n                            return (\n                                <ListGroupItem key={idx}>{x}</ListGroupItem>\n                            )\n                        })}\n                    </ListGroup>\n                    : \n                    <ListGroup className=\"list-group-flush\">\n                        <ListGroupItem>Ibu: {props.ibu}</ListGroupItem>\n                    <ListGroupItem>Atenuation: {props.attenuation_level}</ListGroupItem>\n                    <ListGroupItem>Contributor: {props.contributed_by}</ListGroupItem>\n                        <ListGroupItem>🤟🏽</ListGroupItem>\n                    </ListGroup>\n                    }\n            </div>\n            <Card.Body style={{alignSelf:'center', border:'1px solid', borderColor:'#007bff!important' ,borderRadius:'inherit',padding:'5px',marginBottom:'15px'}}>\n                <Link style={{ textDecoration: 'none', color: '#007bff!important' }} to={`/${props._id}`} variant=\"outline-info\" size=\"lg\" block>View more</Link>\n            </Card.Body>\n        </Card>\n    )\n}\nexport default BeerCard\n","import React,{Component} from \"react\"\nimport service from \"../services/beers\"\nimport BeerCard from \"./BeerCard\"\n\nclass AllBeers extends Component{ \n    constructor(){\n        super()\n        this.state={AllBeers:[]}\n        this.BeerService=new service()\n    }\n\n    componentDidMount(){\n        this.BeerService.GetAllBeers()\n            .then(response=>this.setState({...this.state,AllBeers:response}))\n    }\n\n\n\n    \n\n    render(){\n        return(\n            <div className='cardAlign'>\n            {this.state.AllBeers.length ?\n                this.state.AllBeers.map((x, idx)=>{\n                    return <BeerCard key={idx} {...x}/>\n                })\n                :null\n            }\n            </div>\n        )\n    }\n}\n\nexport default AllBeers","import React, { Component } from \"react\"\nimport {  Redirect } from \"react-router-dom\"\nimport service from \"../services/beers\"\nimport { Form, Button } from \"react-bootstrap\"\n\nclass AddBeer extends Component {\n    constructor() {\n        super()\n        this.state = {\n            beer: {\n                name: '',\n                tagline: '',\n                description: '',\n                first_brewed: '',\n                brewers_tips: '',\n                attenuation_level: 0,\n                contributed_by: '',\n                ibu: 0\n            }\n        }\n        this.BeerService = new service()\n    }\n    change = (e) => {\n        let { name, value } = e.target\n        this.setState({\n            ...this.state,\n            beer: {\n                ...this.state.beer,\n                [name]: value\n            }\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.BeerService.AddBeer(this.state.beer)\n            .then(response => this.setState({ redirect: true }))\n    }\n\n\n\n    render() {\n        return (\n            <>\n                {this.state.redirect ? <Redirect to='/' /> : null}\n                <Form onSubmit={this.handleSubmit} style={{ width: '45vw', margin: 'auto' }}>\n                    <Form.Group controlId=\"formGroupEmail\">\n                        <Form.Label>Name:</Form.Label>\n                        <Form.Control name='name' type=\"text\" placeholder=\"Enter name\" value={this.state.beer.name} onChange={this.change} />\n                    </Form.Group>\n                    <Form.Group controlId=\"formGroupEmail\">\n                        <Form.Label>Tag Line:</Form.Label>\n                        <Form.Control name='tagline' type=\"text\" placeholder=\"Enter Tag line\" value={this.state.beer.tagline} onChange={this.change} />\n                    </Form.Group>\n                    <Form.Group controlId=\"formGroupEmail\">\n                        <Form.Label>Description:</Form.Label>\n                        <Form.Control as=\"textarea\" name='description' placeholder=\"Enter description\" value={this.state.beer.description} onChange={this.change} />\n                    </Form.Group>\n                    <Form.Group controlId=\"formGroupEmail\">\n                        <Form.Label>Ibu:</Form.Label>\n                        <Form.Control name='ibu' type=\"text\" placeholder=\"Enter ibu\" value={this.state.beer.ibu} onChange={this.change} />\n                    </Form.Group>\n                    <Form.Group controlId=\"formGroupEmail\">\n                        <Form.Label>First brewed:</Form.Label>\n                        <Form.Control name='first_brewed' type=\"text\" placeholder=\"Enter first brewed\" value={this.state.beer.first_brewed} onChange={this.change} />\n                    </Form.Group>\n                    <Form.Group controlId=\"formGroupEmail\">\n                        <Form.Label>Brewers Tips:</Form.Label>\n                        <Form.Control name='brewers_tips' type=\"text\" placeholder=\"Enter brewers tips\" value={this.state.beer.brewers_tips} onChange={this.change} />\n                    </Form.Group>\n                    <Form.Group controlId=\"formGroupEmail\">\n                        <Form.Label>Attenuation Level:</Form.Label>\n                        <Form.Control name='attenuation_level' type=\"text\" placeholder=\"Enter attenuation level\" value={this.state.beer.attenuation_level} onChange={this.change} />\n                    </Form.Group>\n                    <Form.Group controlId=\"formGroupEmail\">\n                        <Form.Label>Contributed by:</Form.Label>\n                        <Form.Control name='contributed_by' type=\"text\" placeholder=\"Enter contributor\" value={this.state.beer.contributed_by} onChange={this.change} />\n                    </Form.Group>\n                    <Button className='submitNewBeer' variant=\"outline-primary\" type=\"submit\">\n                        Submit\n                </Button>\n                </Form>\n            </>\n        )\n    }\n}\nexport default AddBeer","import React from \"react\"\nimport { Tab, Image, Card, Tabs, ListGroupItem, ListGroup } from \"react-bootstrap\"\n\nconst BeerInfo = (beer) => {\n    return (\n        <>\n            <div style={{ width: '14rem', margin:'auto' }}>\n                <Image style={{margin:'15px'}} src={beer.image_url} fluid />\n                <Card.Title>{beer.name}</Card.Title>\n            </div>\n            <div>\n                <Tabs defaultActiveKey=\"Description\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"Description\" title=\"Description\">\n                        <Card.Text>\n                            {beer.description}\n                        </Card.Text>\n                    </Tab>\n                    <Tab eventKey=\"Maridaje\" title=\"Maridaje\">\n                        <Card.Text>\n                            {beer.food_pairing ?\n                                <ListGroup className=\"list-group-flush\">\n                                    {beer.food_pairing.map((x, idx) => {\n                                        return (\n                                            <ListGroupItem key={idx}>{x}</ListGroupItem>\n                                        )\n                                    })}\n                                </ListGroup>\n                                : null}\n                        </Card.Text>\n                    </Tab>\n                    <Tab eventKey=\"Ibu\" title=\"Ibu\">\n                        <Card.Text>\n                            {beer.ibu}\n                        </Card.Text>\n                    </Tab>\n                    <Tab eventKey=\"Atenuation\" title=\"Atenuation\">\n                        <Card.Text>\n                            {beer.attenuation_level}\n                        </Card.Text>\n                    </Tab>\n                    <Tab eventKey=\"Brew_tips\" title=\"Brew tips\">\n                        <Card.Text>\n                            {beer.brewers_tips}\n                        </Card.Text>\n                    </Tab>\n                    \n                </Tabs>\n        </div>\n        </>\n    )\n}\nexport default BeerInfo","import React,{Component} from \"react\"\nimport service from \"../services/beers\"\nimport BeerInfo from \"../components/BeerInfo\"\n\nclass RandomBeer extends Component{\n    constructor(){\n        super()\n        this.state={Beer:[]}\n        this.BeerService=new service()\n    }\n    componentDidMount(){\n        this.BeerService.RandomBeer()\n            .then(response=>this.setState({...this.state,Beer:response}))\n    }\n    render(){\n        return(\n            <div>\n                <BeerInfo {...this.state.Beer}/>\n            </div>\n        )\n    }\n}\nexport default RandomBeer","import React, { Component } from \"react\"\nimport service from \"../services/beers\"\nimport BeerInfo from \"../components/BeerInfo\"\n\n\n\nclass getBeerId extends Component {\n    constructor() {\n        super()\n        this.state = { beerId: [] }\n        this.BeerService = new service()\n    }\n\n    componentDidMount() {\n        this.BeerService.SelectedBeer(this.props.match.params.id)\n            .then(response => this.setState({ ...this.state, beerId: response}))\n    }\n\n    render(){\n        return(\n            <div>\n                <BeerInfo {...this.state.beerId}/>\n            </div>\n        )\n    }\n}\n\nexport default getBeerId","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport {Nav, Navbar} from 'react-bootstrap'\n\nconst NavBar = () => {\n    return (\n        <Navbar bg=\"light\" variant=\"light\">\n            <Navbar.Brand>BeerRec</Navbar.Brand>\n            <Nav className=\"mr-auto\">\n                <Link to={\"/\"} style={{ textDecoration: 'none', color: '#007bff!important', marginRight:'2vh' }}>Home</Link>\n                <Link to={\"/all-beers\"} style={{ textDecoration: 'none', color: '#007bff!important', marginRight:'2vh'}}>All Beers</Link>\n                <Link to={\"/new-beer\"} style={{ textDecoration: 'none', color: '#007bff!important', marginRight:'2vh'}}>New Beer</Link>\n                <Link to={\"/random-beer\"} style={{ textDecoration: 'none', color: '#007bff!important', marginRight:'2vh'}}>Random Beer</Link>\n            </Nav>\n        </Navbar>\n    )\n}\n\nexport default NavBar","import React from 'react';\nimport './App.css';\nimport Home from \"./components/Home\";\nimport AllBeers from \"./components/AllBeers\"\nimport NewBeer from \"./components/NewBeer\"\nimport RandomBeer from \"./components/RandomBeer\"\nimport getBeerId from \"./components/id\"\nimport NavBar from \"./components/navBar\"\nimport { Switch, Route } from \"react-router-dom\"\n\nfunction App() {\n  return (\n    <main>\n      <NavBar />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/all-beers\" exact component={AllBeers}/>\n        <Route path=\"/new-beer\" exact component={NewBeer}/>\n        <Route path=\"/random-beer\" exact component={RandomBeer}/>\n        <Route path=\"/:id\" exact component={getBeerId}/>\n      </Switch>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from \"react-router-dom\"\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}